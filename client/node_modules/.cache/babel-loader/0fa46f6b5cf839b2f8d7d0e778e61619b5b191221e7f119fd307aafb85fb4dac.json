{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohiu\\\\CS 593 Agile\\\\web proj\\\\Hema proj\\\\3DCP\\\\client\\\\src\\\\components\\\\UploadHouseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useCatalogContext } from '../hooks/useCatalogContext';\nimport { useNavigate } from 'react-router-dom';\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadHouseForm = () => {\n  _s();\n  const {\n    dispatch\n  } = useCatalogContext();\n  const navigate = useNavigate();\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [formData, setFormData] = useState({\n    structureType: 'house',\n    userId: 1579,\n    images: [],\n    tags: [],\n    files: []\n  });\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const [file, setFile] = useState(\"\");\n  const tagOptions = [{\n    value: \"residential\",\n    label: \"Residential\"\n  }, {\n    value: \"business\",\n    label: \"Business\"\n  }, {\n    value: \"commercial\",\n    label: \"Commercial\"\n  }, {\n    value: \"farm\",\n    label: \"Farm\"\n  }, {\n    value: \"infrastructure\",\n    label: \"Infrastructure\"\n  }, {\n    value: \"sustainable\",\n    label: \"Sustainable\"\n  }, {\n    value: \"tiny house\",\n    label: \"Tiny House\"\n  }, {\n    value: \"single-story\",\n    label: \"Single-Story\"\n  }, {\n    value: \"two-story\",\n    label: \"Two-Story\"\n  }, {\n    value: \"hut\",\n    label: \"Hut\"\n  }, {\n    value: \"component\",\n    label: \"Component\"\n  }, {\n    value: \"decorative\",\n    label: \"Decorative\"\n  }, {\n    value: \"retaining\",\n    label: \"Retaining\"\n  }, {\n    value: \"earthquake\",\n    label: \"Earthquake\"\n  }, {\n    value: \"hurricane\",\n    label: \"Hurricane\"\n  }, {\n    value: \"Tudor\",\n    label: \"Tudor\"\n  }, {\n    value: \"cape cod\",\n    label: \"Cape Cod\"\n  }, {\n    value: \"Mediterranean\",\n    label: \"Mediterranean\"\n  }, {\n    value: \"southwest\",\n    label: \"Southwest\"\n  }, {\n    value: \"modern\",\n    label: \"Modern\"\n  }, {\n    value: \"craftsman\",\n    label: \"Craftsman\"\n  }, {\n    value: \"contemporary\",\n    label: \"Contemporary\"\n  }, {\n    value: \"specialty\",\n    label: \"Specialty\"\n  }, {\n    value: \"industrial\",\n    label: \"Industrial\"\n  }, {\n    value: \"beach\",\n    label: \"Beach\"\n  }, {\n    value: \"bungalow\",\n    label: \"Bungalow\"\n  }, {\n    value: \"cabin\",\n    label: \"Cabin\"\n  }, {\n    value: \"colonial\",\n    label: \"Colonial\"\n  }, {\n    value: \"classical\",\n    label: \"Classical\"\n  }, {\n    value: \"farmhouse\",\n    label: \"Farmhouse\"\n  }, {\n    value: \"ranch\",\n    label: \"Ranch\"\n  }, {\n    value: \"prairie\",\n    label: \"Prairie\"\n  }, {\n    value: \"southern\",\n    label: \"Southern\"\n  }, {\n    value: \"Victorian\",\n    label: \"Victorian\"\n  }];\n  const handleImageChange = e => {\n    const files = Array.from(e.target.files);\n    setFormData({\n      ...formData,\n      images: files,\n      emptyFields: emptyFields ? emptyFields.filter(field => field !== 'images') : []\n    });\n  };\n  const handleFileChange = e => {\n    const files = Array.from(e.target.files);\n    const allowedExtensions = ['.pdf', '.obj', '.stl'];\n    const validFiles = files.filter(file => {\n      const extension = file.name.split('.').pop();\n      return allowedExtensions.includes(`.${extension.toLowerCase()}`);\n    });\n    if (validFiles.length !== files.length) {\n      setError('Please upload files with .pdf, .obj, or .stl extensions only.');\n    } else {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        files: [...prevFormData.files, ...validFiles],\n        emptyFields: emptyFields ? emptyFields.filter(field => field !== 'files') : [],\n        error: null\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    console.log(file);\n    const result = await axios.post(\"http://localhost:4000/upload-files\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    console.log(result);\n    if (result.data.status == \"ok\") {\n      alert(\"Uploaded Successfully!!!\");\n      getPdf();\n    }\n    const {\n      structureId,\n      userId,\n      images,\n      tags,\n      files\n    } = formData;\n    const catalog = {\n      structureId,\n      userId,\n      structureType: 'house',\n      images: images.map(image => image.name),\n      tags: selectedTags,\n      files: files.map(file => file.name)\n    };\n    console.log(\"Form Data:\", formData);\n    try {\n      const apiUrl = 'http://localhost:4000/api/catalog';\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        body: JSON.stringify(catalog),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        setError(json.error);\n        setEmptyFields(json.emptyFields || []);\n      } else {\n        setEmptyFields([]);\n        setError(null);\n        setFormData({\n          structureType: 'house',\n          userId: 1579,\n          images: [],\n          tags: [],\n          files: []\n        });\n        dispatch({\n          type: 'CREATE_CATALOG',\n          payload: json\n        });\n        console.log(formData);\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      setError('An error occurred while submitting the form.');\n    }\n  };\n  const handleCancel = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload House Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"structureType\",\n        children: \"Structure Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"structureType\",\n        name: \"structureType\",\n        value: formData.structureType,\n        readOnly: true // Prevent editing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userId\",\n        children: \"User ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"userId\",\n        name: \"userId\",\n        value: formData.userId,\n        readOnly: true // Prevent editing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"images\",\n        children: \"Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"images\",\n        name: \"images\",\n        onChange: handleImageChange,\n        multiple: true,\n        accept: \"image/*\",\n        className: emptyFields.includes('images') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tags\",\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"tags\",\n        name: \"tags\",\n        value: selectedTags.map(tag => ({\n          value: tag,\n          label: tag\n        })),\n        onChange: selectedOptions => setSelectedTags(selectedOptions.map(option => option.value)),\n        options: tagOptions,\n        isMulti: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"files\",\n        children: \"Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"files\",\n        name: \"files\",\n        onChange: e => setFile(e.target.files[0]),\n        multiple: true,\n        className: emptyFields.includes('files') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }, this), formData.files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Selected Files:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: formData.files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: file.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadHouseForm, \"F6lxykQc7SAHU7/BR8OX58jwHoI=\", false, function () {\n  return [useCatalogContext, useNavigate];\n});\n_c = UploadHouseForm;\nexport default UploadHouseForm;\nvar _c;\n$RefreshReg$(_c, \"UploadHouseForm\");","map":{"version":3,"names":["React","useState","useCatalogContext","useNavigate","Select","jsxDEV","_jsxDEV","UploadHouseForm","_s","dispatch","navigate","selectedTags","setSelectedTags","formData","setFormData","structureType","userId","images","tags","files","error","setError","emptyFields","setEmptyFields","file","setFile","tagOptions","value","label","handleImageChange","e","Array","from","target","filter","field","handleFileChange","allowedExtensions","validFiles","extension","name","split","pop","includes","toLowerCase","length","prevFormData","handleSubmit","preventDefault","FormData","append","console","log","result","axios","post","headers","data","status","alert","getPdf","structureId","catalog","map","image","apiUrl","response","fetch","method","body","JSON","stringify","json","ok","type","payload","handleCancel","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","readOnly","onChange","multiple","accept","tag","selectedOptions","option","options","isMulti","onClick","index","_c","$RefreshReg$"],"sources":["C:/Users/mohiu/CS 593 Agile/web proj/Hema proj/3DCP/client/src/components/UploadHouseForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useCatalogContext } from '../hooks/useCatalogContext';\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport Select from \"react-select\";\r\n\r\nconst UploadHouseForm = () => {\r\n  const { dispatch } = useCatalogContext();\r\n  const navigate = useNavigate();\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    structureType: 'house',\r\n    userId: 1579,\r\n    images: [],\r\n    tags: [],\r\n    files: []\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [emptyFields, setEmptyFields] = useState([]);\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const tagOptions = [\r\n    { value: \"residential\", label: \"Residential\" },\r\n    { value: \"business\", label: \"Business\" },\r\n    { value: \"commercial\", label: \"Commercial\" },\r\n    { value: \"farm\", label: \"Farm\" },\r\n    { value: \"infrastructure\", label: \"Infrastructure\" },\r\n    { value: \"sustainable\", label: \"Sustainable\" },\r\n    { value: \"tiny house\", label: \"Tiny House\" },\r\n    { value: \"single-story\", label: \"Single-Story\" },\r\n    { value: \"two-story\", label: \"Two-Story\" },\r\n    { value: \"hut\", label: \"Hut\" },\r\n    { value: \"component\", label: \"Component\" },\r\n    { value: \"decorative\", label: \"Decorative\" },\r\n    { value: \"retaining\", label: \"Retaining\" },\r\n    { value: \"earthquake\", label: \"Earthquake\" },\r\n    { value: \"hurricane\", label: \"Hurricane\" },\r\n    { value: \"Tudor\", label: \"Tudor\" },\r\n    { value: \"cape cod\", label: \"Cape Cod\" },\r\n    { value: \"Mediterranean\", label: \"Mediterranean\" },\r\n    { value: \"southwest\", label: \"Southwest\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"craftsman\", label: \"Craftsman\" },\r\n    { value: \"contemporary\", label: \"Contemporary\" },\r\n    { value: \"specialty\", label: \"Specialty\" },\r\n    { value: \"industrial\", label: \"Industrial\" },\r\n    { value: \"beach\", label: \"Beach\" },\r\n    { value: \"bungalow\", label: \"Bungalow\" },\r\n    { value: \"cabin\", label: \"Cabin\" },\r\n    { value: \"colonial\", label: \"Colonial\" },\r\n    { value: \"classical\", label: \"Classical\" },\r\n    { value: \"farmhouse\", label: \"Farmhouse\" },\r\n    { value: \"ranch\", label: \"Ranch\" },\r\n    { value: \"prairie\", label: \"Prairie\" },\r\n    { value: \"southern\", label: \"Southern\" },\r\n    { value: \"Victorian\", label: \"Victorian\" },\r\n  ];\r\n\r\n  const handleImageChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setFormData({\r\n      ...formData,\r\n      images: files,\r\n      emptyFields: emptyFields ? emptyFields.filter(field => field !== 'images') : []\r\n    });\r\n  };\r\n  \r\n  const handleFileChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    const allowedExtensions = ['.pdf', '.obj', '.stl'];\r\n    const validFiles = files.filter(file => {\r\n      const extension = file.name.split('.').pop();\r\n      return allowedExtensions.includes(`.${extension.toLowerCase()}`);\r\n    });\r\n  \r\n    if (validFiles.length !== files.length) {\r\n      setError('Please upload files with .pdf, .obj, or .stl extensions only.');\r\n    } else {\r\n      setFormData(prevFormData => ({\r\n        ...prevFormData,\r\n        files: [...prevFormData.files, ...validFiles],\r\n        emptyFields: emptyFields ? emptyFields.filter(field => field !== 'files') : [],\r\n        error: null\r\n      }));\r\n    }\r\n  };  \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    console.log( file);\r\n\r\n    const result = await axios.post(\r\n      \"http://localhost:4000/upload-files\",\r\n      formData,\r\n      {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      }\r\n    );\r\n    console.log(result);\r\n    if (result.data.status == \"ok\") {\r\n      alert(\"Uploaded Successfully!!!\");\r\n      getPdf();\r\n    }\r\n    const { structureId, userId, images, tags, files } = formData;\r\n    const catalog = { structureId, userId, structureType: 'house', images: images.map(image => image.name), tags: selectedTags, files: files.map(file => file.name) };\r\n    console.log(\"Form Data:\", formData);\r\n    \r\n    try {\r\n      const apiUrl = 'http://localhost:4000/api/catalog';\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        body: JSON.stringify(catalog),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const json = await response.json();\r\n  \r\n      if (!response.ok) {\r\n        setError(json.error);\r\n        setEmptyFields(json.emptyFields || []);\r\n      } else {\r\n        setEmptyFields([]);\r\n        setError(null);\r\n        setFormData({\r\n          structureType: 'house',\r\n          userId: 1579,\r\n          images: [],\r\n          tags: [],\r\n          files: []\r\n        });\r\n        dispatch({ type: 'CREATE_CATALOG', payload: json });\r\n        console.log(formData);\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n      setError('An error occurred while submitting the form.');\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  const handleCancel = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form className=\"create\" onSubmit={handleSubmit}> \r\n        <h3>Upload House Model</h3>\r\n\r\n        <label htmlFor=\"structureType\">Structure Type</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"structureType\" \r\n          name=\"structureType\" \r\n          value={formData.structureType} \r\n          readOnly // Prevent editing\r\n        />\r\n\r\n        <label htmlFor=\"userId\">User ID</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"userId\" \r\n          name=\"userId\" \r\n          value={formData.userId} \r\n          readOnly // Prevent editing\r\n        />\r\n\r\n        <label htmlFor=\"images\">Images</label>\r\n        <input \r\n          type=\"file\" \r\n          id=\"images\" \r\n          name=\"images\" \r\n          onChange={handleImageChange} \r\n          multiple \r\n          accept=\"image/*\" \r\n          className={emptyFields.includes('images') ? 'error' : ''}\r\n        />\r\n\r\n        <label htmlFor=\"tags\">Tags</label>\r\n        <Select\r\n          id=\"tags\"\r\n          name=\"tags\"\r\n          value={selectedTags.map(tag => ({ value: tag, label: tag }))}\r\n          onChange={(selectedOptions) => setSelectedTags(selectedOptions.map(option => option.value))}\r\n          options={tagOptions}\r\n          isMulti\r\n        /><br/>\r\n\r\n        <label htmlFor=\"files\">Files</label>\r\n        <input \r\n          type=\"file\" \r\n          id=\"files\" \r\n          name=\"files\" \r\n          onChange={(e) => setFile(e.target.files[0])} \r\n          multiple \r\n          className={emptyFields.includes('files') ? 'error' : ''}\r\n        />\r\n\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" onClick={handleCancel}>Cancel</button>\r\n        </div>\r\n\r\n        {error && <div className=\"error\">{error}</div>}\r\n\r\n        {formData.files.length > 0 && (\r\n          <div>\r\n            <h4>Selected Files:</h4>\r\n            <ul>\r\n              {formData.files.map((file, index) => (\r\n                <li key={index}>{file.name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </form>\r\n        </div>\r\n);\r\n};\r\n\r\nexport default UploadHouseForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}